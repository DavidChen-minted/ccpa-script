webpackHotUpdate("static/development/pages/_app.js",{

/***/ "./src/features/dependency/dependencyCheckSlice.ts":
/*!*********************************************************!*\
  !*** ./src/features/dependency/dependencyCheckSlice.ts ***!
  \*********************************************************/
/*! exports provided: default, dependencyCheckReceived, importRawDependencyChecks, updateDependencyCheckList, resolveAllDependency */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"dependencyCheckReceived\", function() { return dependencyCheckReceived; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"importRawDependencyChecks\", function() { return importRawDependencyChecks; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"updateDependencyCheckList\", function() { return updateDependencyCheckList; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"resolveAllDependency\", function() { return resolveAllDependency; });\n/* harmony import */ var _babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/toConsumableArray */ \"./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\");\n/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @reduxjs/toolkit */ \"./node_modules/@reduxjs/toolkit/dist/redux-toolkit.esm.js\");\n/* harmony import */ var _dependencyCheckEntity__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dependencyCheckEntity */ \"./src/features/dependency/dependencyCheckEntity.ts\");\n/* harmony import */ var _StepNodeRecord__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./StepNodeRecord */ \"./src/features/dependency/StepNodeRecord.ts\");\n/* harmony import */ var _DependencyQueue__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./DependencyQueue */ \"./src/features/dependency/DependencyQueue.ts\");\n/* harmony import */ var _isIncludedInDependencyArray__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./isIncludedInDependencyArray */ \"./src/features/dependency/isIncludedInDependencyArray.ts\");\n/* harmony import */ var _importToDependencyChecks__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./importToDependencyChecks */ \"./src/features/dependency/importToDependencyChecks.ts\");\n\n\n/* eslint-disable no-param-reassign */\n\n\n\n\n\n\nvar dependencyCheckSlice = Object(_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_1__[\"createSlice\"])({\n  name: 'dependencyCheck',\n  initialState: {\n    dependencyChecks: {}\n  },\n  reducers: {\n    dependencyCheckReceived: function dependencyCheckReceived(state, action) {\n      if (!action.payload) {\n        return state;\n      }\n\n      state.dependencyChecks = action.payload.dependencyChecks;\n      return state;\n    },\n    importRawDependencyChecks: function importRawDependencyChecks(state, action) {\n      var dependencyChecks = Object(_importToDependencyChecks__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(action.payload);\n\n      if (dependencyChecks) {\n        state.dependencyChecks = dependencyChecks;\n      }\n\n      return state;\n    },\n    updateDependencyCheckList: function updateDependencyCheckList(state, action) {\n      var _action$payload = action.payload,\n          id = _action$payload.id,\n          scriptType = _action$payload.scriptType,\n          dependencyCheckList = _action$payload.dependencyCheckList;\n\n      if (id && scriptType) {\n        _dependencyCheckEntity__WEBPACK_IMPORTED_MODULE_2__[\"default\"].updateOne(state.dependencyChecks[scriptType], {\n          id: id,\n          changes: {\n            dependencyCheckList: dependencyCheckList\n          }\n        });\n      }\n    },\n    resolveAllDependency: function resolveAllDependency(state, action) {\n      var scriptTypes = action.payload;\n\n      if (!scriptTypes.length) {\n        return;\n      }\n\n      var resolved = new _StepNodeRecord__WEBPACK_IMPORTED_MODULE_3__[\"default\"]();\n      var seen = new _StepNodeRecord__WEBPACK_IMPORTED_MODULE_3__[\"default\"]();\n      /* function to\n        1. copy the dependencyCheckList to the last node\n        1. remove last node in queue\n        3. add last node to resolved if there are still nodes in queue\n      */\n\n      Object.keys(state.dependencyChecks).forEach(function (scriptType) {\n        // loop through each scriptType\n        state.dependencyChecks[scriptType].ids.forEach(function (id) {\n          // loop through each dependency element in each scriptType\n          var stepId = id.toString(); // clear queue\n\n          var queue = new _DependencyQueue__WEBPACK_IMPORTED_MODULE_4__[\"default\"]({\n            scriptType: scriptType,\n            stepId: stepId\n          });\n\n          while (queue.length) {\n            // make sure processing every node in queue\n            // current pointer node\n            var nodeToCheck = queue[queue.length - 1]; // find the current node in the state\n\n            var stepToUpdate = state.dependencyChecks[nodeToCheck.scriptType].entities[nodeToCheck.stepId];\n\n            if (resolved.includes(nodeToCheck)) {\n              // if current node is resolved\n              queue.pop();\n            } else if (stepToUpdate) {\n              // current node still have dependency to resolve\n              if (!seen.includes(nodeToCheck)) {\n                // if current node not seen before\n                // initiate current node's dependency array\n                stepToUpdate.dependencyCheckList = Object(_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(stepToUpdate.dependency); // add current node to seen\n\n                seen.add(nodeToCheck);\n                stepToUpdate.dependency.forEach(function (node) {\n                  // loop through each node in dependency\n                  // default dependency's scriptType to the first type in scriptTypes\n                  node.type = node.type || scriptTypes[0]; // construct nextNode\n\n                  var nextNode = {\n                    scriptType: node.type,\n                    stepId: node.stepId\n                  };\n\n                  if (queue.includes(nextNode)) {\n                    // if nextNode is met in the queue before,\n                    // it means there's circular dependency\n                    throw new Error('circular dependency detected');\n                  } else {\n                    // nextNode is safe to add to queue\n                    queue.push(nextNode);\n                  }\n                });\n              } else {\n                (function () {\n                  // current node has been seen before\n                  // it implies that current node have all nodes in dependency resolved\n                  var _stepToUpdate$depende = stepToUpdate.dependencyCheckList,\n                      dependencyCheckList = _stepToUpdate$depende === void 0 ? [] : _stepToUpdate$depende;\n\n                  var _loop = function _loop(i) {\n                    var _state$dependencyChec;\n\n                    // loop through every node in current dependency check list from the end\n                    // step that corresponds to current node to replace\n                    var stepToReplace = (_state$dependencyChec = state.dependencyChecks[dependencyCheckList[i].type || '']) === null || _state$dependencyChec === void 0 ? void 0 : _state$dependencyChec.entities[dependencyCheckList[i].stepId];\n\n                    if (stepToReplace) {\n                      var _stepToReplace$depend;\n\n                      // if stepToReplace exists\n                      // it means the stepToReplace has dependencyCheckList to replace\n                      // remove the current nodeToReplace first\n                      var nodeToReplace = dependencyCheckList.splice(i, 1)[0]; // copy stepToReplace's dependencyCheckList to stepToUpdate's dependencyCheckList\n                      // without duplicated nodes\n                      // eslint-disable-next-line no-unused-expressions\n\n                      (_stepToReplace$depend = stepToReplace.dependencyCheckList) === null || _stepToReplace$depend === void 0 ? void 0 : _stepToReplace$depend.forEach(function (node) {\n                        if (!Object(_isIncludedInDependencyArray__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(node, dependencyCheckList)) {\n                          dependencyCheckList.splice(i, 0, node);\n                        }\n                      }); // insert the current nodeToReplace again if not exists\n\n                      if (!Object(_isIncludedInDependencyArray__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(nodeToReplace, dependencyCheckList)) {\n                        dependencyCheckList.splice(i, 0, nodeToReplace);\n                      }\n                    }\n                  };\n\n                  for (var i = dependencyCheckList.length - 1; i >= 0; i -= 1) {\n                    _loop(i);\n                  }\n\n                  resolved.add(nodeToCheck);\n                  queue.pop();\n                })();\n              }\n            } else {\n              // current node does not have any dependency\n              resolved.add(nodeToCheck);\n              queue.pop();\n            }\n          }\n        });\n      });\n    }\n  }\n});\n/* harmony default export */ __webpack_exports__[\"default\"] = (dependencyCheckSlice.reducer);\nvar _dependencyCheckSlice = dependencyCheckSlice.actions,\n    dependencyCheckReceived = _dependencyCheckSlice.dependencyCheckReceived,\n    importRawDependencyChecks = _dependencyCheckSlice.importRawDependencyChecks,\n    updateDependencyCheckList = _dependencyCheckSlice.updateDependencyCheckList,\n    resolveAllDependency = _dependencyCheckSlice.resolveAllDependency;\n\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports_1 = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports_1, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports_1)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports_1;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports_1)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/features/dependency/dependencyCheckSlice.ts\n");

/***/ })

})
{"version":3,"file":"static/webpack/static/development/pages/_app.js.6ef896e7e3f9b934dc87.hot-update.js","sources":["webpack:///./src/utils/redux/withRedux.tsx"],"sourcesContent":["import React from 'react';\nimport { Store } from '@reduxjs/toolkit';\nimport { NextPageContext, NextComponentType } from 'next';\nimport { AppContext } from 'next/app';\n\nexport interface WithReduxConfig {\n  serializeState: (state: any) => any;\n  deserializeState: (serializedState: any) => any;\n  storeKey: string;\n  isServerSideRendering: boolean;\n}\n\nexport const defaultConfig: WithReduxConfig = {\n  storeKey: '__NEXT_REDUX_STORE__',\n  serializeState: (state) => state,\n  deserializeState: (state) => state,\n  isServerSideRendering: true,\n};\n\nexport interface StoreProps<S = any> {\n  store: Store<S>;\n}\n\nexport interface WithStorePageContext<S = any>\n  extends NextPageContext,\n    StoreProps<S> {\n  isServer: boolean;\n}\n\nexport interface WithStoreAppContext<S = any> extends AppContext {\n  ctx: WithStorePageContext<S>;\n}\n\nexport interface MakeStoreArg<S = any>\n  extends Partial<WithReduxConfig>,\n    Partial<WithStorePageContext<S>> {\n  preloadedState?: Partial<S>;\n}\n\nexport type MakeStore<S = any> = (arg: MakeStoreArg<S>) => Store<S>;\n\nexport interface InitStoreOptions<S = Store> {\n  seriralizedState?: any;\n  config?: Partial<WithReduxConfig>;\n  ctx?: WithStorePageContext<S>;\n  makeStore: MakeStore<S>;\n}\n\nexport interface WithReduxWrappedAppProps {\n  initialProps: any; // stuff returned from getInitialProps\n  initialState: any; // stuff in the Store state after getInitialProps\n}\n\nfunction getIsServer(): boolean {\n  return typeof window === 'undefined';\n}\n\nfunction serveStore<S>({\n  seriralizedState,\n  config,\n  ctx,\n  makeStore,\n}: InitStoreOptions<S>) {\n  const { deserializeState, storeKey } = { ...defaultConfig, ...config };\n\n  const createStore = () =>\n    makeStore({\n      preloadedState: deserializeState(seriralizedState),\n      ...ctx,\n      ...config,\n    });\n\n  // always create store if server\n  if (getIsServer()) return createStore();\n\n  // reuse store if client\n  (window as any)[storeKey] = (window as any)[storeKey] || createStore();\n\n  return (window as any)[storeKey];\n}\n\nfunction withRedux<S = Store>({\n  makeStore,\n  config: opitonalConfig = {},\n}: {\n  makeStore: MakeStore<S>;\n  config?: Partial<WithReduxConfig>;\n}) {\n  const config: WithReduxConfig = {\n    ...defaultConfig,\n    ...opitonalConfig,\n  };\n\n  return (App: NextComponentType<WithStoreAppContext<S>, any, any>) => {\n    const WrappedApp: NextComponentType<\n      WithStoreAppContext<S>,\n      WithReduxWrappedAppProps,\n      WithReduxWrappedAppProps\n    > = ({ initialProps, initialState, ...props }) => {\n      const store = serveStore({\n        seriralizedState: initialState,\n        config,\n        makeStore,\n      });\n\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      return <App {...props} {...initialProps} store={store} />;\n    };\n\n    if (config.isServerSideRendering || App.getInitialProps) {\n      WrappedApp.getInitialProps = async (appCtx) => {\n        const store = serveStore({ ctx: appCtx.ctx, makeStore });\n\n        // eslint-disable-next-line no-param-reassign\n        appCtx.ctx.store = store;\n\n        const initialProps =\n          typeof App.getInitialProps === 'function'\n            ? await App.getInitialProps.call(App, appCtx)\n            : {};\n\n        return {\n          initialProps,\n          initialState: config.serializeState(store.getState()),\n        };\n      };\n    }\n\n    return WrappedApp;\n  };\n}\n\nexport default withRedux;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAYA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAJA;AACA;AAwCA;AACA;AACA;AACA;AACA;AAKA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAEA;AAAA;AAEA;AADA;AADA;AACA;AACA;AAMA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAMA;AACA;AADA;AAAA;AAAA;AACA;AAAA;AACA;AAIA;AACA;AAIA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AALA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAMA;AANA;AAYA;AACA;AAFA;AACA;AAZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}
steps:
  - id: begin
    check:
      script:
        db: drupal
        snippets:
            - set_email_var
    delete:
      script:
        db: drupal
        snippets:
          - set_request_number
          - set_user_id_var
          - compose_email_placeholder
          - compose_text_placeholder
  - id: users
    check:
      description: >
        check if the email is in users table in bidata DB
      script:
        db: drupal
        snippets:
          - set_email_var
          - find_user_id
          - show_user_id
    delete:
      description: >
        create sql to "delete" in users table
      script:
        db: drupal
        snippets:
          - update_placeholder_in_users
  - id: sessions
    check:
      description: >
        check if the user id is in sessions table in sessions DB
      script:
        db: sessions
        snippets:
          - set_user_id_var
          - find_sessions
  - id: friend_email
    check:
      description: >
        check if the email is in friend_email table in bidata DB
      script:
        db: drupal
        snippets:
          - set_email_var
          - find_friend_email_id
          - find_friend_email
  - id: friend_address
    check:
      description: >
        check if the friend email id is in friend_address table in bidata DB
      script:
        db: drupal
        snippets:
          - set_email_var
          - find_friend_email_id
          - find_friend_address_id
          - find_friend_address
  - id: minted_account
    check:
      description: >
        check if the user id is in minted_account table in bidata DB
      script:
        db: drupal
        snippets:
          - set_user_id_var
          - find_minted_account
  - id: minted_order_incomplete
    check:
      description: >
        check if the user id is in minted_order table in bidata DB and 
        order has been placed and NOT completed
      choices:
        - id: yes
          notes: >
            TODO: We need to wait for the order to be completed 
            before we delete data
        - id: no
      script:
        db: drupal
        snippets:
          - set_user_id_var
          - find_minted_order_incomplete
  - id: minted_order_complete
    check:
      description: >
        check if the user id is in minted_order table in bidata DB and 
        order has been placed, completed, and not passed the return policy, 
        3 months after purchase
      script:
        db: drupal
        snippets:
          - set_user_id_var
          - find_minted_order_complete
  - id: minted_order_digital
    check:
      dependency:
        id: minted_order_complete
        choice: yes
        type: check
      description: >
        check if the minted_order_line_item is digital
      choices:
        - id: yes
        - id: no
          notes: >
            TODO: We need to wait for the return policy to pass before we delete data
      script:
        db: drupal
        snippets:
          - set_user_id_var
          - find_minted_order_digital
  
types:
  - check
  - delete
  - Validation
db:
  - drupal
  - sessions
  - di
  - jobs
  - di_jobs
vars:
  email:
    description: >
      email address from OneTrust
  requestNumber:
    description: >
      request number from OneTrust
  userId:
    description: >
      user id from the main drupal database
  emailPlaceholder:
    description: >
      placeholder to replace email reference
  textPlaceholder:
    description: >
      placeholder to replace text reference
snippets:
  set_email_var: |
    set @email = {{email}};
  find_user_id: |
    select uid into @UID from users where mail = @email;
  show_user_id: |
    select @UID;
  set_request_number: |
    set @requestnumber = {{requestNumber}};
  set_user_id_var: |
    set @UID = {{userId}};
  compose_email_placeholder: |
    select concat("deleted-onetrust-req-", @requestnumber, "@privacy.mntd.net") into @emailplaceholder;
  compose_text_placeholder: |
    select concat("Deleted per onetrust", @requestnumber) into @textplaceholder;
  update_placeholder_in_users: |
    update users
    set
    name = @textplaceholder,
    init = @textplaceholder,
    mail = @emailplaceholder,
    pass = textplaceholder,
    where uid = @UID;
  find_sessions: |
    select * from sessions where uid = @UID;
  find_friend_email_id: |
    select id into @friendemailid from friend_email where email = @email;
  find_friend_email: |
    select * from friend_email where id = @friendemailid;
  find_friend_address_id: |
    select friend_address_id into @friend_address_id
    from friend_email where id = @friendemailid;
  find_friend_address: |
    select * from friend_address where id = @friendaddressid;
  find_minted_account: |
    select * from minted_account where user_id = @UID;
  find_minted_order_incomplete: |
    select *
    from minted_order
    where owner_id = @UID
    and is_placed = 1
    and minted_state_diagram_state_id <> 150;
  find_minted_order_complete: |
    select *
    from minted_order
    where owner_id = @UID
    and is_placed = 1
    and minted_state_diagram_state_id = 150
    and date_add(order_placement_date, interval 3 month) >= now();
  find_minted_order_digital: |
    select moli.*
    from minted_order mo
    inner join minted_order_line_item moli
    on mo.id = moli.minted_order_id
    and moli.line_item_type = 'product'
    where owner_id = @UID
    and is_placed = 1
    and minted_state_diagram_state_id = 150
    and date_add(order_placement_date, interval 3 month) >= now();